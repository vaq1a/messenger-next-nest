datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator nestgraphql {
  provider = "prisma-nestjs-graphql"
  output   = "../src/shared/prismagraphql"
  reExport = Directories
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id               String    @id @default(uuid())
  email            String    @unique
  password         String /// @HideField({ output: true })
  name             String
  role             Role      @default(USER)
  tokens           Tokens?
  createdChats     Chat[]    @relation("CreatedChats")
  messages         Message[] @relation("Messages")
  participantChats Chat[]
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @default(now())
}

enum Role {
  USER
  ADMIN
}

model Tokens {
  id           String   @id @default(uuid())
  accessToken  String
  refreshToken String   @unique
  user         User     @relation(fields: [userId], references: [id])
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now())
  userId       String   @unique
}

model Chat {
  id               String    @id @default(uuid())
  name             String
  author           User      @relation("CreatedChats", fields: [authorId], references: [id])
  authorId         String
  participantUsers User[]
  messages         Message[]
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @default(now())
}

model Message {
  id        String   @id @default(uuid())
  author    User     @relation("Messages", fields: [authorId], references: [id])
  authorId  String
  chat      Chat     @relation(fields: [chatId], references: [id])
  chatId    String
  text      String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}
